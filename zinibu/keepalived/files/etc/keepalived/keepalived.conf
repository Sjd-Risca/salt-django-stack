{% set zinibu_basic = salt['pillar.get']('zinibu_basic', {}) -%}

global_defs {
  router_id haproxy1
}

vrrp_script haproxy {
  script "killall -0 haproxy"
# an alternative way of checking haproxy is running
#  script "pidof haproxy"
  interval 2
  weight 2
}

vrrp_instance 50 {
  virtual_router_id 50
  advert_int 1
{%- if 'haproxy_servers' in zinibu_basic.project %}
  {%- for id, haproxy_server in zinibu_basic.project.haproxy_servers.iteritems() %}
    {%- if grains['id'] == id %}
  priority {{ haproxy_server.keepalived_priority }}
    {%- endif %}
  {%- endfor %}
{%- endif %}
  state MASTER
  interface eth0
  virtual_ipaddress {
    {{ zinibu_basic.project.haproxy_frontend_public_ip }}
    {{ zinibu_basic.project.haproxy_frontend_private_ip }}
  }
  # IP of host where this file is running
  #unicast_src_ip 192.168.33.15
  # IP of the host that will take over
  #unicast_peer {
  #  192.168.33.16
  #}

  # get a password from pillar
  #authentication {
  #  auth_type PASS
  #  auth_pass password
  #}
  track_script {
    haproxy
  }
}
